/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kamerka;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JSlider;
import javax.swing.JToggleButton;

/**
 *
 * @author bladekp
 */
public class Formatka extends javax.swing.JFrame {

    private String path;
    private boolean takeShot = false;
    private boolean snapshotB = false;

    public boolean isTakeShot() {
        return takeShot;
    }
    
    public boolean isSnapshotB() {
        return snapshotB;
    }
    
    public void setTakeShot(boolean takeshot) {
        this.takeShot = takeshot;
    }

    public void setSnapshoyB(boolean snapshot) {
        this.snapshotB = snapshot;
    }
    
    public Formatka() {
        initComponents();
        setVisible(true);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        shot = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        grayscale = new javax.swing.JToggleButton();
        jSlider1 = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        contrast = new javax.swing.JToggleButton();
        contrastSlider = new javax.swing.JSlider();
        brightnessButton = new javax.swing.JToggleButton();
        brightness = new javax.swing.JSlider();
        gammaButton = new javax.swing.JToggleButton();
        gamma = new javax.swing.JSlider();
        inversion = new javax.swing.JToggleButton();
        solariseButton = new javax.swing.JToggleButton();
        solarise = new javax.swing.JSlider();
        snapshot = new javax.swing.JButton();
        sharpnessButton = new javax.swing.JToggleButton();
        sharpnessAlpha = new javax.swing.JSlider();
        sharpnessBeta = new javax.swing.JSlider();
        sharpnessgamma = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        borderButton = new javax.swing.JToggleButton();
        borderSize = new javax.swing.JSlider();
        borderType = new javax.swing.JComboBox();
        thresholdingButton = new javax.swing.JToggleButton();
        thresholdingType = new javax.swing.JComboBox();
        thresholdingLevel = new javax.swing.JSlider();
        flip = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        gaussian = new javax.swing.JToggleButton();
        gaussianSize = new javax.swing.JSlider();
        erosionButton = new javax.swing.JToggleButton();
        dilationButton = new javax.swing.JToggleButton();
        erosionSize = new javax.swing.JSlider();
        dilationSize = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kamerka");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusTraversalPolicyProvider(true);

        shot.setText("Shot");
        shot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shotActionPerformed(evt);
            }
        });

        grayscale.setText("Grayscale");

        jSlider1.setForeground(new java.awt.Color(255, 255, 255));
        jSlider1.setMaximum(30);
        jSlider1.setMinimum(1);
        jSlider1.setToolTipText("Frames per second");
        jSlider1.setValue(4);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jLabel1.setText("FPS");

        contrast.setText("Contrast");
        contrast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contrastActionPerformed(evt);
            }
        });

        contrastSlider.setMaximum(255);
        contrastSlider.setMinimum(-255);
        contrastSlider.setToolTipText("Contrast");
        contrastSlider.setValue(0);

        brightnessButton.setText("Brightness");
        brightnessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brightnessButtonActionPerformed(evt);
            }
        });

        brightness.setMaximum(255);
        brightness.setMinimum(-255);
        brightness.setToolTipText("Brightness adjustment");
        brightness.setValue(0);

        gammaButton.setText("Gamma");
        gammaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gammaButtonActionPerformed(evt);
            }
        });

        gamma.setMaximum(799);
        gamma.setMinimum(1);
        gamma.setValue(400);

        inversion.setText("Inversion");
        inversion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inversionActionPerformed(evt);
            }
        });

        solariseButton.setText("Solarise");

        solarise.setMaximum(255);
        solarise.setToolTipText("");
        solarise.setValue(127);

        snapshot.setText("Snapshot");
        snapshot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snapshotActionPerformed(evt);
            }
        });

        sharpnessButton.setText("Sharpness");
        sharpnessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sharpnessButtonActionPerformed(evt);
            }
        });

        sharpnessAlpha.setMaximum(1000);
        sharpnessAlpha.setMinimum(-1000);
        sharpnessAlpha.setToolTipText("");
        sharpnessAlpha.setValue(0);

        sharpnessBeta.setMaximum(1000);
        sharpnessBeta.setMinimum(-1000);
        sharpnessBeta.setValue(0);

        sharpnessgamma.setMaximum(1000);
        sharpnessgamma.setMinimum(-1000);
        sharpnessgamma.setToolTipText("");
        sharpnessgamma.setValue(0);

        jLabel2.setText("alpha");

        jLabel3.setText("beta");

        jLabel4.setText("gamma");

        borderButton.setText("Border");
        borderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borderButtonActionPerformed(evt);
            }
        });

        borderSize.setMaximum(50);
        borderSize.setValue(5);

        borderType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CONSTANT", "REPLICATE", "REFLECT", "WRAP", "DEFAULT", "ISOLATED", " " }));
        borderType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borderTypeActionPerformed(evt);
            }
        });

        thresholdingButton.setText("Thresholding");

        thresholdingType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BINARY", "BINARY_INV", "TRUNC", "TOZERO", "TOZERO_INV", " ", " " }));

        thresholdingLevel.setMaximum(255);
        thresholdingLevel.setValue(127);

        flip.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "NONE", "FLIP_X", "FLIP_Y" }));

        jLabel5.setText("Flip");

        gaussian.setText("Gaussian");
        gaussian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gaussianActionPerformed(evt);
            }
        });

        gaussianSize.setMaximum(1000);
        gaussianSize.setMinimum(2);
        gaussianSize.setValue(15);

        erosionButton.setText("Erosion");
        erosionButton.setToolTipText("");
        erosionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                erosionButtonActionPerformed(evt);
            }
        });

        dilationButton.setText("Dilation");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(snapshot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(brightnessButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(contrast, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(brightness, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(contrastSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(grayscale, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inversion, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(flip, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(borderButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(thresholdingButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(gaussian, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(borderType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(thresholdingType, 0, 0, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(thresholdingLevel, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                                    .addComponent(borderSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(gaussianSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(erosionButton, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                            .addComponent(dilationButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(erosionSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dilationSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(gammaButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(solariseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sharpnessButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(sharpnessAlpha, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                                    .addComponent(sharpnessBeta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(sharpnessgamma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(gamma, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
                                    .addComponent(solarise, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grayscale)
                    .addComponent(inversion)
                    .addComponent(flip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(contrast)
                    .addComponent(contrastSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(brightnessButton)
                    .addComponent(brightness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gammaButton)
                    .addComponent(gamma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(solariseButton)
                    .addComponent(solarise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sharpnessButton)
                        .addComponent(jLabel2))
                    .addComponent(sharpnessAlpha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(sharpnessBeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sharpnessgamma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(borderButton)
                        .addComponent(borderType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(borderSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(thresholdingButton)
                    .addComponent(thresholdingType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(thresholdingLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gaussian)
                    .addComponent(gaussianSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(erosionButton)
                    .addComponent(erosionSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dilationButton)
                    .addComponent(dilationSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(snapshot, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(shot)
                .addContainerGap(621, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(shot)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void shotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shotActionPerformed
         takeShot = true;
    }//GEN-LAST:event_shotActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jSlider1StateChanged

    private void contrastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contrastActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contrastActionPerformed

    private void brightnessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brightnessButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_brightnessButtonActionPerformed

    private void gammaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gammaButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gammaButtonActionPerformed

    private void inversionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inversionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inversionActionPerformed

    private void snapshotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snapshotActionPerformed
        snapshotB = true;
    }//GEN-LAST:event_snapshotActionPerformed

    private void sharpnessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sharpnessButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sharpnessButtonActionPerformed

    private void borderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borderButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_borderButtonActionPerformed

    private void borderTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borderTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_borderTypeActionPerformed

    private void gaussianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gaussianActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gaussianActionPerformed

    private void erosionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_erosionButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_erosionButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formatka();
            }
        });
    }

    public JButton getShot() {
        return shot;
    }

    public void setShot(JButton jButton1) {
        this.shot = jButton1;
    }

    public boolean isGrayscale() {
        return grayscale.isSelected();
    }
    
    public boolean isContrast(){
        return contrast.isSelected();
    }

    public JSlider getjSlider1() {
        return jSlider1;
    }

    public void setjSlider1(JSlider jSlider1) {
        this.jSlider1 = jSlider1;
    }
    
    public JSlider getContrastSlider() {
        return contrastSlider;
    }

    public void setContrastSlider(JSlider contrastSlider) {
        this.contrastSlider = contrastSlider;
    }

    public JSlider getBrightness() {
        return brightness;
    }

    public void setBrightness(JSlider brightness) {
        this.brightness = brightness;
    }

    public JToggleButton getBrightnessButton() {
        return brightnessButton;
    }

    public void setBrightnessButton(JToggleButton brightnessButton) {
        this.brightnessButton = brightnessButton;
    }
    
    public boolean isBrightness() {
        return brightnessButton.isSelected();
    }
    
    public boolean isGamma() {
        return gammaButton.isSelected();
    }

    public JSlider getGamma() {
        return gamma;
    }

    public void setGamma(JSlider gamma) {
        this.gamma = gamma;
    }
    
    public boolean isSolaris() {
        return solariseButton.isSelected();
    }
    
     public boolean isInversion() {
        return inversion.isSelected();
    }

    public JSlider getSolarise() {
        return solarise;
    }

    public void setSolarise(JSlider solarise) {
        this.solarise = solarise;
    }
    
    public boolean isSharpness(){
        return sharpnessButton.isSelected();
    }

    public JSlider getSharpnessAlpha() {
        return sharpnessAlpha;
    }

    public JSlider getSharpnessBeta() {
        return sharpnessBeta;
    }

    public JSlider getSharpnessgamma() {
        return sharpnessgamma;
    }
    
    public boolean isBorder(){
        return borderButton.isSelected();
    }

    public JSlider getBorderSize() {
        return borderSize;
    }

    public void setBorderSize(JSlider borderSize) {
        this.borderSize = borderSize;
    }

    public JComboBox getBorderType() {
        return borderType;
    }

    public void setBorderType(JComboBox borderType) {
        this.borderType = borderType;
    }
    
    public boolean isThresholding(){
        return thresholdingButton.isSelected();
    }

    public JSlider getThresholdingLevel() {
        return thresholdingLevel;
    }

    public JComboBox getThresholdingType() {
        return thresholdingType;
    }

    public JComboBox getFlip() {
        return flip;
    }
    
    public boolean isGaussian(){
        return gaussian.isSelected();
    }

    public JSlider getGaussianSize() {
        return gaussianSize;
    }

    public boolean isDilation() {
        return dilationButton.isSelected();
    }

    public boolean isErosion() {
        return erosionButton.isSelected();
    }

    public JSlider getDilationSize() {
        return dilationSize;
    }

    public JSlider getErosionSize() {
        return erosionSize;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton borderButton;
    private javax.swing.JSlider borderSize;
    private javax.swing.JComboBox borderType;
    private javax.swing.JSlider brightness;
    private javax.swing.JToggleButton brightnessButton;
    private javax.swing.JToggleButton contrast;
    private javax.swing.JSlider contrastSlider;
    private javax.swing.JToggleButton dilationButton;
    private javax.swing.JSlider dilationSize;
    private javax.swing.JToggleButton erosionButton;
    private javax.swing.JSlider erosionSize;
    private javax.swing.JComboBox flip;
    private javax.swing.JSlider gamma;
    private javax.swing.JToggleButton gammaButton;
    private javax.swing.JToggleButton gaussian;
    private javax.swing.JSlider gaussianSize;
    private javax.swing.JToggleButton grayscale;
    private javax.swing.JToggleButton inversion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider sharpnessAlpha;
    private javax.swing.JSlider sharpnessBeta;
    private javax.swing.JToggleButton sharpnessButton;
    private javax.swing.JSlider sharpnessgamma;
    private javax.swing.JButton shot;
    private javax.swing.JButton snapshot;
    private javax.swing.JSlider solarise;
    private javax.swing.JToggleButton solariseButton;
    private javax.swing.JToggleButton thresholdingButton;
    private javax.swing.JSlider thresholdingLevel;
    private javax.swing.JComboBox thresholdingType;
    // End of variables declaration//GEN-END:variables
}
